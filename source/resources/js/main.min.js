"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass(e,t,i){return t&&_defineProperties(e.prototype,t),i&&_defineProperties(e,i),e}function _defineProperty(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}var vertex,fragment,postvertex,postfragment,ThreeStage=function(){function e(){_classCallCheck(this,e),_defineProperty(this,"container",C.GetBy.id("Scene")),_defineProperty(this,"mouse",void 0),_defineProperty(this,"raycaster",void 0),_defineProperty(this,"camera",void 0),_defineProperty(this,"cameraDistanceGallery",500),_defineProperty(this,"cameraDistanceScroll",400),_defineProperty(this,"cameraDistance",void 0),_defineProperty(this,"scene",void 0),_defineProperty(this,"renderer",void 0),_defineProperty(this,"width",void 0),_defineProperty(this,"height",void 0),_defineProperty(this,"alpha",1),_defineProperty(this,"geometry",void 0),_defineProperty(this,"material",void 0),_defineProperty(this,"_dom",C.GetBy.id("Page")),_defineProperty(this,"_visor",void 0),_defineProperty(this,"isEnabled",!1),_defineProperty(this,"isMouseEnabled",!1)}return _createClass(e,[{key:"init",value:function(e){var t=this;this.scene=new THREE.Scene,this.width=Metrics.WIDTH,this.height=Metrics.HEIGHT,this.cameraDistance=this.cameraDistanceScroll,this.mouse=new THREE.Vector2,this.loadShaders(function(){t.setupRenderer(),t.setupCamera(),t.setupObjects(),t.setupActions(),t.isEnabled=!0,e()})}},{key:"loadShaders",value:function(e){vertex="precision mediump float;\nuniform float uVelo;\nuniform float uProgress;\nvarying vec2 vUv;\n#define M_PI 1.314\n\nvoid main(){\nvec3 pos = position;\npos.z = pos.z + ((sin(uv.x * M_PI) * max(-4.0, min(4.0,uVelo))) * 0.1);\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4(pos,1.);\n}",fragment="uniform float time;\nuniform float progress;\nuniform float alpha;\nuniform sampler2D texture1;\nuniform vec4 resolution;\nvarying vec2 vUv;\nvoid main()\t{\nfloat scaleCenter = 0.5;\nvec2 newUV = (vUv - scaleCenter) * progress + scaleCenter;\nvec4 color = texture2D(texture1,newUV);\ngl_FragColor = vec4(color.rgb, alpha * color.a);\n}",e()}},{key:"setupRenderer",value:function(){this.raycaster=new THREE.Raycaster,this.renderer=new THREE.WebGLRenderer({antialias:!1,alpha:!0}),this.renderer.setPixelRatio(1.4),this.renderer.setSize(this.width,this.height),this.renderer.sortObjects=!1,this.renderer.outputEncoding=THREE.sRGBEncoding,this.container.appendChild(this.renderer.domElement)}},{key:"setupCamera",value:function(){this.camera=new THREE.PerspectiveCamera(70,this.width/this.height,100,1e3),this.camera.position.set(0,0,this.cameraDistanceGallery),this.camera.lookAt(0,0,0)}},{key:"setupObjects",value:function(){this.geometry=new THREE.PlaneBufferGeometry(1,1,80,80),this.material=new THREE.ShaderMaterial({extensions:{derivatives:"#extension GL_OES_standard_derivatives : enable"},side:THREE.DoubleSide,uniforms:{time:{type:"f",value:0},progress:{type:"f",value:0},alpha:{type:"f",value:1},uProgress:{type:"f",value:0},uVelo:{type:"f",value:0},texture1:{type:"t",value:null},resolution:{type:"v4",value:new THREE.Vector4}},transparent:!0,vertexShader:vertex,fragmentShader:fragment})}},{key:"setupActions",value:function(){var e=this;Keyboard.add(Keyboard.LEFT,"LEFT",function(){e._visor.isShow&&e._visor.style===STYLE_GALLERY&&e._visor.prev()}),Keyboard.add(Keyboard.RIGHT,"RIGHT",function(){e._visor.isShow&&e._visor.style===STYLE_GALLERY&&e._visor.next()})}},{key:"openExtern",value:function(e){this._visor.image=Basics.IMAGES[e],this._visor.openExtern(),this.openVisor()}},{key:"openVisor",value:function(){gsap.to(Main.domProgress,{x:0,scaleX:.4,scaleY:.4,transformOrigin:"0 100%",ease:Power3.easeOut,duration:.4,force3D:!0}),gsap.to(this._dom,{alpha:0,ease:Power3.easeOut,duration:.4}),gsap.to(this,{alpha:0,ease:Power3.easeOut,duration:.4,onUpdate:function(){Scroll.isScrolling||Scroll.loop(!0)}}),gsap.to(this,{cameraDistance:this.cameraDistanceGallery,ease:Power3.easeOut,duration:1}),this._visor.open()}},{key:"closeVisor",value:function(){gsap.to(this,{cameraDistance:this.cameraDistanceScroll,ease:Power3.easeInOut,duration:1}),gsap.to(Main.domProgress,{x:0,scaleX:1,scaleY:1,transformOrigin:"0 100%",ease:Power3.easeOut,duration:.4,delay:.4,force3D:!0}),gsap.to(this._dom,{alpha:1,ease:Power3.easeOut,duration:.4,delay:.4}),gsap.to(this,{alpha:1,ease:Power3.easeOut,duration:.4,delay:.4,onUpdate:function(){Scroll.isScrolling||Scroll.loop(!0)}}),this._visor.close()}},{key:"resize",value:function(){if(!this.isEnabled)return!1;this.width=Metrics.WIDTH,this.height=Metrics.HEIGHT,this.renderer.setSize(this.width,this.height),this.camera.aspect=this.width/this.height,this.camera.fov=2*Math.atan(this.width/this.camera.aspect/(2*this.cameraDistanceScroll))*(180/Math.PI),this.camera.updateProjectionMatrix()}},{key:"createMesh",value:function(e){var t=this.material.clone(),i=(new THREE.TextureLoader).load(e.src);i.needsUpdate=!0;var n,a=e.iHeight/e.iWidth,a=e.height/e.width>a?(n=e.width/e.height*a,1):(n=1,e.height/e.width/a);i.minFilter=THREE.LinearFilter,t.uniforms.resolution.value.x=e.width,t.uniforms.resolution.value.y=e.height,t.uniforms.resolution.value.z=n,t.uniforms.resolution.value.w=a,t.uniforms.progress.value=0,t.uniforms.uVelo.value=0,t.uniforms.texture1.value=i,t.uniforms.texture1.value.needsUpdate=!0;t=new THREE.Mesh(this.geometry,t);return t.scale.set(e.width,e.height,e.width/2),t}},{key:"getSpeed",value:function(){}},{key:"moveVisor",value:function(){this.camera.position.z=this.cameraDistance;Metrics.WIDTH,Interaction.positions.mouse.x,Metrics.HEIGHT,Interaction.positions.mouse.y}},{key:"checkMouseOver",value:function(){this.mouse.x=Interaction.positions.mouse.x/Metrics.WIDTH*2-1,this.mouse.y=2*-(Interaction.positions.mouse.y/Metrics.HEIGHT)+1,Math.abs(Scroll.speed)<20&&(this.raycaster.setFromCamera(this.mouse,this.camera),this.raycaster.intersectObjects(this.scene.children).length)}},{key:"loop",value:function(e){this.isMouseEnabled&&this.checkMouseOver(),(this.isEnabled||e)&&(this.moveVisor(),this.renderer.render(this.scene,this.camera))}},{key:"getSourceSynch",value:function(i){var n=new XMLHttpRequest;return new Promise(function(e,t){n.onreadystatechange=function(){4===n.readyState&&(200<=n.status&&n.status<300?e(n):t({status:n.status,statusText:n.statusText}))},n.open("GET",i,!0),n.send()})}}]),e}();function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass(e,t,i){return t&&_defineProperties(e.prototype,t),i&&_defineProperties(e,i),e}function _defineProperty(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}var RiverLines=function(){function e(){_classCallCheck(this,e)}return _createClass(e,null,[{key:"init",value:function(){var e=this;this._setupObject(),gsap.ticker.add(function(){e.loop()})}},{key:"_setupObject",value:function(){var e=this,t=MATERIAL_SINE_LINES.clone();t.depthTest=!1,this.plane=new THREE.Mesh(BASIC_PLANE,t);var i=Metrics.WIDTH+400;this.plane.scale.set(i,Metrics.HEIGHT,100),this.plane.position.set(-10,0,0),t.uniforms.resolution.value.x=i,t.uniforms.resolution.value.y=Metrics.HEIGHT,t.uniforms.stroke.value=750,t.uniforms.green.value=.31,t.uniforms.red.value=.17,t.uniforms.blue.value=1,t.uniforms.amplitude.value=10,t.uniforms.period.value=10,t.uniforms.speed1.value=1,t.uniforms.speed2.value=1,t.uniforms.gap.value=0,t.uniforms.timeMod2.value=.4,Main.stage.scene.add(this.plane),this._lines.push(this.plane);t={Type1:function(){gsap.to(e.parameters,{duration:2,stroke:750,green:.31,red:.17,blue:1,amplitude:10,period:10,speed1:1,speed2:1,gap:0,timeMod2:.4,m1:.9,m2:2,m3:0,ease:Power3.easeInOut})},Type2:function(){gsap.to(e.parameters,{duration:2,stroke:750,green:0,red:0,blue:.5,amplitude:10,period:5.4,speed1:1,speed2:1,gap:.95,timeMod2:.56,m1:.9,m2:2,m3:0,ease:Power3.easeInOut})},Type3:function(){gsap.to(e.parameters,{duration:2,stroke:750,green:.31,red:.17,blue:1,amplitude:11.3,period:6,speed1:1,speed2:1,gap:0,timeMod2:.4,m1:.9,m2:2,m3:0,ease:Power3.easeInOut})},Type4:function(){gsap.to(e.parameters,{duration:2,stroke:750,green:.31,red:.17,blue:1,amplitude:11.3,period:6,speed1:1,speed2:1,gap:.5,timeMod2:.4,m1:.9,m2:2,m3:0,ease:Power3.easeInOut})},Type5:function(){gsap.to(e.parameters,{duration:2,stroke:430,green:.14,red:.44,blue:.84,amplitude:10,period:10,speed1:.29,speed2:.94,gap:.75,timeMod2:.4,m1:.9,m2:2,m3:0,ease:Power3.easeInOut})}};Main.gui.add(this,"isPlay").name("play"),Main.gui.add(this.parameters,"speed1",-5,5,.01).name("speed"),Main.gui.add(this.parameters,"speed2",-5,5,.01).name("speedMod"),Main.gui.add(this.parameters,"timeMod2",-1,1,.01).name("timeMod2"),Main.gui.add(this.parameters,"stroke",1,2e3,1).name("stroke"),Main.gui.add(this.parameters,"red",0,1,.01).name("red"),Main.gui.add(this.parameters,"green",0,1,.01).name("green"),Main.gui.add(this.parameters,"blue",0,1,.01).name("blue"),Main.gui.add(this.parameters,"period",0,50,.01).name("period"),Main.gui.add(this.parameters,"amplitude",0,50,.01).name("amplitude"),Main.gui.add(this.parameters,"gap",0,10,.01).name("gap"),Main.gui.add(this.parameters,"m1",-10,10,.01).name("mod1"),Main.gui.add(this.parameters,"m2",-10,10,.01).name("mod2"),Main.gui.add(t,"Type1"),Main.gui.add(t,"Type2"),Main.gui.add(t,"Type3"),Main.gui.add(t,"Type4"),Main.gui.add(t,"Type5")}},{key:"_setupObjects",value:function(){for(var e=0;e<this.total;e++){var t=MATERIAL_LINE.clone(),i=new THREE.Mesh(BASIC_PLANE,t),n=Metrics.WIDTH+400;i.scale.set(n,1,100),i.position.set(-10,e,-100),this._lines.push(i),Main.stage.scene.add(i),t.uniforms.time.value=.1*e}}},{key:"resize",value:function(){var e=Metrics.WIDTH+400;this.plane.scale.set(e,Metrics.HEIGHT,100),this.plane.position.set(-10,0,0),this.plane.material.uniforms.resolution.value.x=e,this.plane.material.uniforms.resolution.value.y=Metrics.HEIGHT}},{key:"loop",value:function(){this.time=.1*Math.max(.01,-.002*Scroll.speed1*.01),this.time2=.1*Math.max(.01,-.002*Scroll.speed2*.01),console.log(this.speed1);for(var e=0;e<this.total;e++)this.isPlay&&(this._lines[e].material.uniforms.time.value+=.05*this.parameters.speed1,this._lines[e].material.uniforms.time2.value+=.05*this.parameters.speed2,this._lines[e].material.uniforms.velocity.value=Math.max(Math.abs(.01*Scroll.speed),1));this._lines[0].material.uniforms.stroke.value=this.parameters.stroke,this._lines[0].material.uniforms.green.value=this.parameters.green,this._lines[0].material.uniforms.red.value=this.parameters.red,this._lines[0].material.uniforms.blue.value=this.parameters.blue,this._lines[0].material.uniforms.amplitude.value=this.parameters.amplitude,this._lines[0].material.uniforms.period.value=this.parameters.period,this._lines[0].material.uniforms.speed1.value=this.parameters.speed1,this._lines[0].material.uniforms.speed2.value=this.parameters.speed2,this._lines[0].material.uniforms.gap.value=this.parameters.gap,this._lines[0].material.uniforms.timeMod2.value=this.parameters.timeMod2,this._lines[0].material.uniforms.m1.value=this.parameters.m1,this._lines[0].material.uniforms.m2.value=this.parameters.m2,this._lines[0].material.uniforms.m3.value=this.parameters.m3}}]),e}();_defineProperty(RiverLines,"plane",void 0),_defineProperty(RiverLines,"total",1),_defineProperty(RiverLines,"_lines",[]),_defineProperty(RiverLines,"time",0),_defineProperty(RiverLines,"timeAux",0),_defineProperty(RiverLines,"speed1",0),_defineProperty(RiverLines,"speed2",0),_defineProperty(RiverLines,"isPlay",!0),_defineProperty(RiverLines,"parameters",{time:750,stroke:750,green:.31,red:.17,blue:1,amplitude:10,period:10,speed1:1,speed2:1,gap:0,timeMod2:.4,m1:.9,m2:2,m3:0});var VERTEX_BASIC="\n    varying vec2 vUv;\n\n    void main() {\n      vUv = uv;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0 );\n    }\n    ",VERTEX_LINE="\n    uniform float time;\n    precision mediump float;\n    uniform float velocity;\n    uniform float uProgress;\n   \n    varying vec2 vUv;\n\n    #define M_PI 3.141592\n\n    void main() {\n      vUv = uv;\n      vec3 pos = position;\n      \n        pos.y = pos.y + (sin(pos.x * 10.0 + time) * 50.0) * (uv.x * sin(.9 * 10.0 + time * .4) * 4.0);\n    //\n\n    //RECTO\n    //pos.z = pos.z + (((uv.y * M_PI) * uProgress*.2) * -0.125);\n    //pos.z = pos.z - uProgress*.2;\n\n    //CURVA\n    //pos.y = pos.y + ((uv.y * velocity) * -2.0);\n    //\n    //pos.z = pos.z + ((sin(uv.y * M_PI) * velocity) * 0.125);\n    //pos.z = pos.z + ((uv.y * velocity) * 0.125);\n    \n    //pos.y = pos.y + ((sin(uv.x * M_PI) * velocity) * 0.125);\n    //pos.z = pos.z + ((sin(uv.x * M_PI) * velocity) * 0.125);\n    \n    vUv = uv;\n    \n    gl_Position = projectionMatrix * modelViewMatrix * vec4(pos,1.);\n      \n    }\n    ",FRAGMENT_SINE_LINES="\nuniform float lines;\nuniform float time;\nuniform float time2;\nuniform float speed1;\nuniform float speed2;\nuniform float red;\nuniform float green;\nuniform float blue;\nuniform float stroke;\nuniform float amplitude;\nuniform float period;\nuniform float gap;\nuniform float m1;\nuniform float m2;\nuniform float m3;\n\nuniform float timeMod2;\n\nuniform float progress;\nuniform float alpha;\nuniform float burn;\nuniform float velocity;\nuniform sampler2D texture;\nuniform vec4 resolution;\nvarying vec2 vUv;\n\n// 2D Random\nfloat random (in vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))\n                 * 43758.5453123);\n}\n\nfloat noise(float x) {\n    float i = floor(x);\n    float f = fract(x);\n    \n    //float y = mix(random(vec2(i).x, vec2(i + 1).x, smoothstep(0., 1., 1.));\n   \n    \n    float y = mix(random(vec2(i, i)), random(vec2(i+1., i+1.)), smoothstep(0., 1., f));\n    \n    return y;\n}\n\n\nvoid main() {\n    vec2 uv = gl_FragCoord.xy / resolution.xy;\n    vec4 wave_color = vec4(0.0,0.0,0.0,1.0);  \n    float wave_width = 0.01;\n    \n    uv.y -= 0.65;\n    \n    float Pi = 6.28318530718; // Pi*2\n    float Directions = 16.0; // BLUR DIRECTIONS (Default 16.0 - More is better but slower)\n    float Quality = 3.0; // BLUR QUALITY (Default 4.0 - More is better but slower)\n    float Size = 8.0; // BLUR SIZE (Radius)\n    vec2 Radius = 10.0/resolution.xy;\n    \n    \n    \n    for(float i = 0.0; i < 20.0; i++) {\n        float yPos = (noise(10.0) * .2);\n        float yPos2 = (noise(40.0));\n        \n        //float fInit = uv.x - 0.2;\n        float fInit = uv.x + 0.2;\n        float fAlpha = (i + 1.0) * .1;       \n        float fRed = min(1.0, max(0.0, red * fInit)) * fAlpha;       \n        float fGreen = min(1.0, max(0.0, green * fInit)) * fAlpha;       \n        float fBlue = min(1.0, max(0.0, blue * fInit)) * fAlpha;  \n        float fAmplitude = amplitude * .001;   \n        float fStroke = stroke;   \n        float fTime1 = ((time) + i * .2);\n        float fTime2 = ((time2) + i * timeMod2);\n        \n       // float mod1 = (uv.x * sin(uv.x * m1 + fTime2) * m2);\n        float mod1 = (uv.x * sin(uv.x * m1 + fTime2) * m2);\n        \n        uv.y += gap * .01;  \n        uv.y += (sin(uv.x * period + fTime1) * fAmplitude) * mod1;\n        \n        \n        //uv.y += (sin(uv.x * period + fTime1) * fAmplitude);\n            \n        \n          \n       \n       \n        wave_width = abs(.5 / (fStroke * uv.y));\n        //wave_color += vec3(wave_width * 0.0, wave_width * 1.0, wave_width * (uv.x - 0.2) * (i * .1));\n        \n         wave_color += vec4(wave_width * fRed, wave_width * fGreen, wave_width * fBlue, 1.0);\n        \n    }\n        \n    gl_FragColor = wave_color;\n}\n",FRAGMENT_LINE="\nuniform float time;\nuniform float progress;\nuniform float alpha;\nuniform float burn;\nuniform float speed;\nuniform sampler2D texture;\nuniform vec4 resolution;\nvarying vec2 vUv;\n\nvoid main() {\n    gl_FragColor = vec4(0.0,0.0,1.0,.9);\n}\n",MATERIAL_SINE_LINES=new THREE.ShaderMaterial({extensions:{derivatives:"#extension GL_OES_standard_derivatives : enable"},side:THREE.FrontSide,uniforms:{time:{type:"f",value:0},time2:{type:"f",value:0},speed1:{type:"f",value:1},speed2:{type:"f",value:1},stroke:{type:"f",value:0},red:{type:"f",value:0},green:{type:"f",value:0},blue:{type:"f",value:0},amplitude:{type:"f",value:0},period:{type:"f",value:0},gap:{type:"f",value:0},m1:{type:"f",value:.9},m2:{type:"f",value:2},m3:{type:"f",value:0},timeMod2:{type:"f",value:.4},progress:{type:"f",value:1},alpha:{type:"f",value:1},burn:{type:"f",value:1},resolution:{type:"v4",value:new THREE.Vector4},velocity:{type:"f",value:0},texture:{type:"t",value:null},color:{}},transparent:!0,vertexShader:VERTEX_BASIC,fragmentShader:FRAGMENT_SINE_LINES}),MATERIAL_LINE=new THREE.ShaderMaterial({extensions:{derivatives:"#extension GL_OES_standard_derivatives : enable"},side:THREE.FrontSide,uniforms:{time:{type:"f",value:0},progress:{type:"f",value:1},alpha:{type:"f",value:1},burn:{type:"f",value:1},resolution:{type:"v4",value:new THREE.Vector4},velocity:{type:"f",value:0},texture:{type:"t",value:null},color:{}},transparent:!0,vertexShader:VERTEX_LINE,fragmentShader:FRAGMENT_LINE}),BASIC_PLANE=new THREE.PlaneBufferGeometry(1,1,80,80),DataHolder={rivers:[],images:[],getJSON:function(n){return new Promise(function(e,t){var i=new XMLHttpRequest;i.open("GET",n),i.responseType="json",i.onload=function(){e(i.response)},i.send()})},getAllRivers:function(){var i=this;return new Promise(function(t,e){0===i.rivers.length?i.getJSON("/assets/data/rivers.json").then(function(e){i.rivers=e,t(e)}):t(i.rivers)})},getRiver:function(){var i=this;return new Promise(function(t,e){i.getJSON("/assets/data/35068.json").then(function(e){i.images=e.pois,t(e)})})}},Main={scrollbar:null,winInquire:null,stats:null,isResizing:!1,stage:new ThreeStage,gui:new dat.GUI,firstItem:null,firstItem2:null,init:function(){Basics.id="Ibaiak_v0.0.1",Basics.mainLang=document.documentElement.lang,Basics.isDebug=document.body.classList.contains("__isDebug"),Basics.hasCookies=!1;var e=C.GetBy.selector("img");Basics.TOTAL_IMAGES=e.length,Basics.REST_TOTAL_IMAGES=Basics.TOTAL_IMAGES,Basics.IMAGES=[],CSS.init(),Metrics.update(!0),Functions.doMrCorrales(),Keyboard.init(),Accessibility.init(),C.Ease.init(),Interaction.init({ajax:!1,drag:!1}),Interaction.positions.mouse.x=0,Interaction.positions.mouse.y=0,Statics.init(C.GetBy.id("Interface")),this.setupStage()},setupStage:function(){var e=this;this.stage.init(function(){RiverLines.init(),gsap.to(e.carruselLoader,{actual:1,duration:1,ease:Power4.easeInOut,delay:0,onComplete:function(){Basics.isTouch?e.initLoadMobile():e.initLoad()}})})},initLoad:function(){for(var e=C.GetBy.selector("img"),t=Math.min(20,Basics.TOTAL_IMAGES),i=[],n=new THREE.TextureLoader,a=0;a<t;a++)i.push(e[a].getAttribute("data-src")),n.load(e[a].getAttribute("data-src"),function(e){0},void 0,function(e){console.error("An error happened.")});this.setupHistory(),this.setupScroll()},initLoadMobile:function(){for(var e=C.GetBy.selector("img"),t=0;t<e.length;t++)e[t].setAttribute("loading","lazy"),e[t].setAttribute("src",e[t].getAttribute("data-src"));this.setupScroll()},setupHistory:function(){var e=this;window.onpopstate=function(){e.stage._visor.isShow&&(e.stage._visor.style===STYLE_GALLERY?e.stage.closeVisor():e.stage.openVisor())}},setupScroll:function(){var e=this;Basics.isTouch||this.resize(),setTimeout(function(){e.hideLoader()},300)},hideLoader:function(){(new gsap.timeline).pause(),C.Remove(C.GetBy.id("Preloader")),Scroll.loop(!0),this.enableStage(),this.start()},start:function(){Basics.isTouch||(this.stage.isMouseEnabled=!0,Basics.isDebug?gsap.ticker.add(function(){Main.loopDebug()}):gsap.ticker.add(function(){Main.loop()}))},selectRiver:function(e,t){},enableStage:function(){var e,t;Scroll.isScrolling=!1,-1<window.location.href.indexOf("photography")&&(t=0,t=-1<(e=(e=window.location.href.slice(window.location.href.indexOf("photography"),window.location.href.lenght)).slice(12,e.length)).indexOf(".html")?Number(e.slice(0,e.length-5)):Number(e),history.replaceState({},"Xandra Álvarez Allende","/"),this.stage.openExtern(200-t))},getTypePage:function(){return C.GetBy.id("Page").getAttribute("data-page"),new Default},resize:function(){this.isResizing=!0,this.stage.resize(),RiverLines.resize(),this.isResizing=!1},loop:function(e,t,i){this.isResizing||(Scroll.isScrolling&&Scroll.loop(),this.stage.loop())},loopDebug:function(e,t,i){Statics.begin(),this.loop(),Statics.end()}};function putZeros(e){var t="";return(e=Math.floor(e))<10?t=t+"000"+e:e<100?t=t+"00"+e:e<1e3?t=t+"0"+e:t+=e,t}(document.attachEvent?"complete"===document.readyState:"loading"!==document.readyState)?Main.init():document.addEventListener("DOMContentLoaded",Main.init);